name: Study Buddy CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: "gruppo-11"
  GCP_REGION: "europe-west1"
  GCP_SA_EMAIL: "github-terraform@gruppo-11.iam.gserviceaccount.com"
  WIF_PROVIDER: "projects/236113564589/locations/global/workloadIdentityPools/study-buddy-github-pool/providers/github-provider"
  TF_WORKING_DIR: "./terraform/k8s"
  APPROVERS: "ncridlig, aliloloee, taaraa99"

jobs:
  security-and-lint:
    name: Security and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

  terraform-apply:
    name: Terraform Plan & Apply
    needs: [security-and-lint]
    runs-on: ubuntu-latest
    timeout-minutes: 29
    environment: terraform
    env:
      ACTIONS_RUNNER_DEBUG: true
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      MACHINE_TYPE: ${{ secrets.MACHINE_TYPE }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      BUSINESS_DIVSION: ${{ secrets.BUSINESS_DIVSION }}
      NAME: ${{ secrets.NAME }}
      USER: ${{ secrets.USER }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DB_VERSION: ${{ secrets.DB_VERSION }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      HOST: ${{ secrets.HOST }}
      PORT: ${{ secrets.PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL }}
      DJANGO_SUPERUSER_FIRSTNAME: ${{ secrets.DJANGO_SUPERUSER_FIRSTNAME }}
      DJANGO_SUPERUSER_LASTNAME: ${{ secrets.DJANGO_SUPERUSER_LASTNAME }}
      DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
      DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
      LLM_SERVICE_URL: ${{ secrets.LLM_SERVICE_URL }}
      CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
      ON_CLOUD: ${{ secrets.ON_CLOUD }}
      GS_BUCKET_STATIC_NAME: ${{ secrets.GS_BUCKET_STATIC_NAME }}
      GS_BUCKET_MEDIA_NAME: ${{ secrets.GS_BUCKET_MEDIA_NAME }}
      REDIS_HOST_LLM: ${{ secrets.REDIS_HOST_LLM }}
      BACKEND_URL: ${{ secrets.BACKEND_URL }}
      ASYNC_JOB_MAX_RETRIES: ${{ secrets.ASYNC_JOB_MAX_RETRIES }}
      ASYNC_JOB_RETRY_DELAY: ${{ secrets.ASYNC_JOB_RETRY_DELAY }}
      ASYNC_JOB_TIMEOUT: ${{ secrets.ASYNC_JOB_TIMEOUT }}
      MARK_LEFTOVER_RESULT_KEY: ${{ secrets.MARK_LEFTOVER_RESULT_KEY }}
      MARK_DANGLING_RESULT_KEY: ${{ secrets.MARK_DANGLING_RESULT_KEY }}
      STUDY_FRIEND_CUDA: ${{ secrets.STUDY_FRIEND_CUDA }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.GCP_SA_EMAIL }}

      - name: Echo GCP Region
        run: echo "GCP Region is ${{ secrets.GCP_REGION }}"

      - name: Echo environment variables for debug
        run: |
          echo "GCP_PROJECT_ID=$GCP_PROJECT_ID"
          echo "GCP_REGION=$GCP_REGION"
          echo "MACHINE_TYPE=$MACHINE_TYPE"
          echo "ENVIRONMENT=$ENVIRONMENT"
          echo "BUSINESS_DIVSION=$BUSINESS_DIVSION"
          echo "NAME=$NAME"
          echo "USER=$USER"
          # echo "PASSWORD=$PASSWORD"  # still commented out
          echo "DB_VERSION=$DB_VERSION"
          echo "SECRET_KEY=$SECRET_KEY"
          echo "DEBUG=$DEBUG"
          echo "HOST=$HOST"
          echo "PORT=$PORT"
          echo "REDIS_HOST=$REDIS_HOST"
          echo "DJANGO_SUPERUSER_EMAIL=$DJANGO_SUPERUSER_EMAIL"
          echo "DJANGO_SUPERUSER_FIRSTNAME=$DJANGO_SUPERUSER_FIRSTNAME"
          echo "DJANGO_SUPERUSER_LASTNAME=$DJANGO_SUPERUSER_LASTNAME"
          echo "DJANGO_SUPERUSER_PASSWORD=$DJANGO_SUPERUSER_PASSWORD"
          echo "DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE"
          echo "ALLOWED_HOSTS=$ALLOWED_HOSTS"
          echo "ALLOWED_ORIGINS=$ALLOWED_ORIGINS"
          echo "LLM_SERVICE_URL=$LLM_SERVICE_URL"
          echo "CSRF_TRUSTED_ORIGINS=$CSRF_TRUSTED_ORIGINS"
          echo "ON_CLOUD=$ON_CLOUD"
          echo "GS_BUCKET_STATIC_NAME=$GS_BUCKET_STATIC_NAME"
          echo "GS_BUCKET_MEDIA_NAME=$GS_BUCKET_MEDIA_NAME"
          echo "REDIS_HOST_LLM=$REDIS_HOST_LLM"
          echo "BACKEND_URL=$BACKEND_URL"
          echo "ASYNC_JOB_MAX_RETRIES=$ASYNC_JOB_MAX_RETRIES"
          echo "ASYNC_JOB_RETRY_DELAY=$ASYNC_JOB_RETRY_DELAY"
          echo "ASYNC_JOB_TIMEOUT=$ASYNC_JOB_TIMEOUT"
          echo "MARK_LEFTOVER_RESULT_KEY=$MARK_LEFTOVER_RESULT_KEY"
          echo "MARK_DANGLING_RESULT_KEY=$MARK_DANGLING_RESULT_KEY"
          echo "STUDY_FRIEND_CUDA=$STUDY_FRIEND_CUDA"
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL"

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var-file=terraform.tfvars

      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ env.APPROVERS }}
          minimum-approvals: 1

      - name: Apply Terraform Configuration
        id: apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -var-file=terraform.tfvars

      - name: Clean up sensitive files
        if: always()
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "Cleaning up terraform.tfvars and any leftovers..."
          rm -f terraform.tfvars
          rm -rf .terraform
