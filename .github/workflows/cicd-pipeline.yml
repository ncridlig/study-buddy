name: Study Buddy CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: "gruppo-11"
  GCP_REGION: "europe-west1"
  GCP_SA_EMAIL: "github-terraform@gruppo-11.iam.gserviceaccount.com"
  WIF_PROVIDER: "projects/236113564589/locations/global/workloadIdentityPools/study-buddy-github-pool/providers/github-provider"
  TF_WORKING_DIR: "./terraform/k8s"
  APPROVERS: "ncridlig, aliloloee, taaraa99"

jobs:
  security-and-lint:
    name: Security and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

  terraform-apply:
    name: Terraform Plan & Apply
    needs: [security-and-lint]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.GCP_SA_EMAIL }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan \
            -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="gcp_region=${{ secrets.GCP_REGION }}" \
            -var="machine_type=${{ secrets.MACHINE_TYPE }}" \
            -var="environment=${{ secrets.ENVIRONMENT }}" \
            -var="business_divsion=${{ secrets.BUSINESS_DIVSION }}" \
            -var="NAME=${{ secrets.NAME }}" \
            -var="USER=${{ secrets.USER }}" \
            -var="PASSWORD=${{ secrets.PASSWORD }}" \
            -var="DB_VERSION=${{ secrets.DB_VERSION }}" \
            -var="SECRET_KEY=${{ secrets.SECRET_KEY }}" \
            -var="DEBUG=${{ secrets.DEBUG }}" \
            -var="HOST=${{ secrets.HOST }}" \
            -var="PORT=${{ secrets.PORT }}" \
            -var="REDIS_HOST=${{ secrets.REDIS_HOST }}" \
            -var="DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" \
            -var="DJANGO_SUPERUSER_FIRSTNAME=${{ secrets.DJANGO_SUPERUSER_FIRSTNAME }}" \
            -var="DJANGO_SUPERUSER_LASTNAME=${{ secrets.DJANGO_SUPERUSER_LASTNAME }}" \
            -var="DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" \
            -var="DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }}" \
            -var="ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" \
            -var="ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}" \
            -var="LLM_SERVICE_URL=${{ secrets.LLM_SERVICE_URL }}" \
            -var="CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}" \
            -var="ON_CLOUD=${{ secrets.ON_CLOUD }}" \
            -var="GS_BUCKET_STATIC_NAME=${{ secrets.GS_BUCKET_STATIC_NAME }}" \
            -var="GS_BUCKET_MEDIA_NAME=${{ secrets.GS_BUCKET_MEDIA_NAME }}" \
            -var="REDIS_HOST_LLM=${{ secrets.REDIS_HOST_LLM }}" \
            -var="BACKEND_URL=${{ secrets.BACKEND_URL }}" \
            -var="ASYNC_JOB_MAX_RETRIES=${{ secrets.ASYNC_JOB_MAX_RETRIES }}" \
            -var="ASYNC_JOB_RETRY_DELAY=${{ secrets.ASYNC_JOB_RETRY_DELAY }}" \
            -var="ASYNC_JOB_TIMEOUT=${{ secrets.ASYNC_JOB_TIMEOUT }}" \
            -var="MARK_LEFTOVER_RESULT_KEY=${{ secrets.MARK_LEFTOVER_RESULT_KEY }}" \
            -var="MARK_DANGLING_RESULT_KEY=${{ secrets.MARK_DANGLING_RESULT_KEY }}" \
            -var="STUDY_FRIEND_CUDA=${{ secrets.STUDY_FRIEND_CUDA }}" \
            -var="NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"

      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ env.APPROVERS }}
          minimum-approvals: 1

      - name: Apply Terraform Configuration
        id: apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply -auto-approve \
            -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="gcp_region=${{ secrets.GCP_REGION }}" \
            -var="machine_type=${{ secrets.MACHINE_TYPE }}" \
            -var="environment=${{ secrets.ENVIRONMENT }}" \
            -var="business_divsion=${{ secrets.BUSINESS_DIVSION }}" \
            -var="NAME=${{ secrets.NAME }}" \
            -var="USER=${{ secrets.USER }}" \
            -var="PASSWORD=${{ secrets.PASSWORD }}" \
            -var="DB_VERSION=${{ secrets.DB_VERSION }}" \
            -var="SECRET_KEY=${{ secrets.SECRET_KEY }}" \
            -var="DEBUG=${{ secrets.DEBUG }}" \
            -var="HOST=${{ secrets.HOST }}" \
            -var="PORT=${{ secrets.PORT }}" \
            -var="REDIS_HOST=${{ secrets.REDIS_HOST }}" \
            -var="DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" \
            -var="DJANGO_SUPERUSER_FIRSTNAME=${{ secrets.DJANGO_SUPERUSER_FIRSTNAME }}" \
            -var="DJANGO_SUPERUSER_LASTNAME=${{ secrets.DJANGO_SUPERUSER_LASTNAME }}" \
            -var="DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" \
            -var="DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }}" \
            -var="ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" \
            -var="ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}" \
            -var="LLM_SERVICE_URL=${{ secrets.LLM_SERVICE_URL }}" \
            -var="CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}" \
            -var="ON_CLOUD=${{ secrets.ON_CLOUD }}" \
            -var="GS_BUCKET_STATIC_NAME=${{ secrets.GS_BUCKET_STATIC_NAME }}" \
            -var="GS_BUCKET_MEDIA_NAME=${{ secrets.GS_BUCKET_MEDIA_NAME }}" \
            -var="REDIS_HOST_LLM=${{ secrets.REDIS_HOST_LLM }}" \
            -var="BACKEND_URL=${{ secrets.BACKEND_URL }}" \
            -var="ASYNC_JOB_MAX_RETRIES=${{ secrets.ASYNC_JOB_MAX_RETRIES }}" \
            -var="ASYNC_JOB_RETRY_DELAY=${{ secrets.ASYNC_JOB_RETRY_DELAY }}" \
            -var="ASYNC_JOB_TIMEOUT=${{ secrets.ASYNC_JOB_TIMEOUT }}" \
            -var="MARK_LEFTOVER_RESULT_KEY=${{ secrets.MARK_LEFTOVER_RESULT_KEY }}" \
            -var="MARK_DANGLING_RESULT_KEY=${{ secrets.MARK_DANGLING_RESULT_KEY }}" \
            -var="STUDY_FRIEND_CUDA=${{ secrets.STUDY_FRIEND_CUDA }}" \
            -var="NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}"

      - name: Clean up sensitive files
        if: always()
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "Cleaning up terraform.tfvars and any leftovers..."
          rm -f terraform.tfvars
          rm -rf .terraform